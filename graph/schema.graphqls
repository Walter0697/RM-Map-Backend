scalar Upload

input UserFilter {
  username: String
  role: String
}

input UserSearch {
  username: String!
}

input CurrentTime {
  time: String!
}

input IdModel {
  id: Int!
}

type User {
  id: Int!
  username: String!
  role: String!
  created_at: String!
}

type UserPreference {
  id: Int!
  user: User
  relation: User
  regular_pin: Pin
  favourite_pin: Pin
  selected_pin: Pin
  hurry_pin: Pin
}

type Marker {
  id: Int!
  label: String!
  latitude: Float!
  longitude: Float!
  address: String!
  image_link: String
  link: String
  type: String!
  description: String
  estimate_time: String
  price: String
  status: String
  to_time: String
  from_time: String
  is_fav: Boolean!
  created_at: String!
  created_by: User!
  updated_at: String!
  updated_by: User!
}

type MarkerType {
  id: Int!
  label: String!
  value: String!
  priority: Int!
  icon_path: String!
  created_at: String!
  created_by: User!
  updated_at: String!
  updated_by: User!
}

type EventType {
  label: String!
  value: String!
  priority: Int!
  icon_path: String!
}

type Pin {
  id: Int!
  label: String!
  image_path: String!
  display_path: String!
  top_left_x: Int!
  top_left_y: Int!
  bottom_right_x: Int!
  bottom_right_y: Int!
  created_at: String!
  created_by: User!
  updated_at: String!
  updated_by: User!
}

type DefaultPin {
  label: String!
  pin: Pin
  created_at: String
  created_by: User
  updated_at: String
  updated_by: User
}

type MapPin {
  pinlabel: String!
  typelabel: String!
  image_path: String!
}

type Schedule {
  id: Int!
  label: String!
  description: String!
  status: String!
  selected_date: String!
  marker: Marker!
  created_at: String!
  created_by: User!
  updated_at: String!
  updated_by: User!
}

type TodayEvent {
  yesterday_event: [Schedule]!
}

type Query {
  users(filter: UserFilter): [User]!
  usersearch(filter: UserSearch!): User
  preference: UserPreference
  markers: [Marker]!
  markertypes: [MarkerType]!
  eventtypes: [EventType]!
  pins: [Pin]!
  defaultpins: [DefaultPin]!
  mappins: [MapPin]!
  schedules(params: CurrentTime!): [Schedule]!
  today(params: CurrentTime!): TodayEvent!
  previousmarkers: [Marker]!
  markerschedules(params: IdModel!): [Schedule]!
  me: String!
}

input NewUser {
  username: String!
  password: String!
  role: String!
}

input UpdateRelation {
  username: String!
}

input UpdatePreferredPin {
  label: String!
  pin_id: Int
}

input NewMarker {
  label: String!
  latitude: Float!
  longitude: Float!
  address: String!
  image_link: String
  image_upload: Upload
  link: String
  type: String!
  description: String
  to_time: String
  from_time: String
  estimate_time: String
  price: String
}

input UpdateMarker {
  id: Int!
  label: String
  address: String
  image_link: String
  image_upload: Upload
  link: String
  type: String
  description: String
  to_time: String
  from_time: String
  estimate_time: String
  price: String
}

input UpdateMarkerFavourite {
  id: Int!
  is_fav: Boolean!
}

input NewMarkerType {
  label: String!
  value: String!
  priority: Int!
  icon_upload: Upload
}

input UpdatedMarkerType {
  id: Int!
  label: String
  value: String
  priority: Int
  icon_upload: Upload
}

input NewPin {
  label: String!
  top_left_x: Int!
  top_left_y: Int!
  bottom_right_x: Int!
  bottom_right_y: Int!
  image_upload: Upload
}

input UpdatedPin {
  id: Int!
  label: String
  top_left_x: Int
  top_left_y: Int
  bottom_right_x: Int
  bottom_right_y: Int
  image_upload: Upload
}

input PreviewPinInput {
  top_left_x: Int!
  top_left_y: Int!
  bottom_right_x: Int!
  bottom_right_y: Int!
  image_upload: Upload
  type_id: Int!
}

input NewSchedule {
  label: String!
  description: String!
  selected_time: String!
  marker_id: Int!
}

input UpdateSchedule {
  id: Int!
  label: String
  description: String
  selected_time: String
}

input ScheduleStatus {
  id: Int!
  status: String!
}

input ScheduleStatusList {
  ids: [ScheduleStatus]!
}

input UpdateModel {
  id: Int!
}

input RemoveModel {
  id: Int!
}

input UpdatedDefault {
  label: String!
  updated_type: String!
  int_value: Int
  string_value: String
}

input Login {
  username: String!
  password: String!
}

input Logout {
  jwt: String!
}

type LoginResult {
  jwt: String!
  username: String!
}

type Mutation {
  createUser(input: NewUser!): String!
  updateRelation(input: UpdateRelation!): String!
  updatePreferredPin(input: UpdatePreferredPin!): UserPreference!
  createMarker(input: NewMarker!): Marker!
  editMarker(input: UpdateMarker!): Marker!
  removeMarker(input: RemoveModel!): String!
  updateMarkerFav(input: UpdateMarkerFavourite!): Marker!
  createMarkerType(input: NewMarkerType!): MarkerType!
  editMarkerType(input: UpdatedMarkerType!): MarkerType!
  removeMarkerType(input: RemoveModel!): String!
  createPin(input: NewPin!): Pin!
  editPin(input: UpdatedPin!): Pin!
  previewPin(input: PreviewPinInput!): String!
  removePin(input: RemoveModel!): String!
  updateDefault(input: UpdatedDefault!): String!
  createSchedule(input: NewSchedule!): Schedule!
  editSchedule(input: UpdateSchedule!): Schedule!
  updateScheduleStatus(input: ScheduleStatusList!): [Schedule]!
  removeSchedule(input: RemoveModel!): Marker!
  revokeMarker(input: UpdateModel!): Marker!
  login(input: Login!): LoginResult!
  logout(input: Logout!): String!
}